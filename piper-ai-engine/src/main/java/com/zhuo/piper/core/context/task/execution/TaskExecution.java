package com.zhuo.piper.core.context.task.execution;


import com.zhuo.piper.core.context.Accessor;
import com.zhuo.piper.core.task.TaskStatus;

import java.io.Serializable;
import java.util.Date;

/**
 * 任务上下文接口
 */
public interface TaskExecution extends Accessor, Serializable {
    /**
     * Get the unique id of the task instance.
     *
     * @return String the id
     */
    String getId();

    String getDagNodeId();

    String getJobId();
    /**
     * Get the id of the parent task, if this
     * is a sub-task.
     *
     * @return String the id of the parent task.
     */
    String getParentId();

    /**
     * Get the current status of this task.
     *
     * @return The status of the task.
     */
    TaskStatus getStatus();


    Object getEnv();

    /**
     * Get the result output generated by the task
     * handler which executed this task.
     *
     * @return Object the output of the task
     */
    Object getOutput();
    /**
     * Get the result input generated by the task
     * handler which executed this task.
     *
     * @return Object the input of the task
     */
    Object getInput();

    /**
     * Get the time when this task instance
     * was created.
     *
     * @return Date
     */
    Date getCreateTime();

    /**
     * Get the time when this task instance
     * was started.
     *
     * @return Date
     */
    Date getStartTime();

    /**
     * Return the time when this task instance
     * ended (CANCELLED, FAILED, COMPLETED)
     *
     * @return Date
     */
    Date getEndTime();

    /**
     * Returns the total time in ms for this task
     * to execute (excluding wait time of the task
     * in transit). i.e. actual execution time on
     * a worker node.
     *
     * @return long
     */
    Date getExecutionTime();
}
